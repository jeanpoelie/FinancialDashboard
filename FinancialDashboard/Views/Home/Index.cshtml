@model FinancialDashboard.Models.FinancialModel
@{
    ViewBag.Title = "Home Page";
}

<div class="container-fluid mt-5">
    <!-- Heading -->
    <div class="card mb-4 wow fadeIn">
        <!--Card content-->
        <div class="card-body d-sm-flex justify-content-between">
            <h4 class="mb-2 mb-sm-0 pt-1">
                <a href="https://mdbootstrap.com/docs/jquery/" target="_blank">Home Page</a>
                <span>/</span>
                <span>Dashboard</span>
            </h4>
            <form class="d-flex justify-content-center">
                <!-- Default input -->
                <input type="search" placeholder="Type your query" aria-label="Search" class="form-control">
                <button class="btn btn-primary btn-sm my-0 p" type="submit">
                    <i class="fas fa-search"></i>
                </button>
            </form>
        </div>
    </div>
    <!-- Heading -->
    <!--Grid row-->
    <div class="row wow fadeIn">
        <!--Grid column-->
        <div class="col-md-9 mb-4">
            <!--Card-->
            <div class="card">
                <!-- Card header -->
                <div class="card-header">Line chart</div>
                <!--Card content-->
                <div class="card-body">
                    <canvas id="lineChart"></canvas>
                </div>
            </div>
            <!--/.Card-->
        </div>
        <!--Grid column-->
        <!--Grid column-->
        <div class="col-md-3 mb-4">
            <!--Card-->
            <div class="card mb-4">
                <!-- Card header -->
                <div class="card-header text-center">
                    Outgoing per category (Pie chart)
                </div>
                <!--Card content-->
                <div class="card-body">
                    <canvas id="pieChart"></canvas>
                </div>
            </div>
            <!--/.Card-->
            <!--Card-->
            <div class="card mb-4">
                <!--Card content-->
                <div class="card-body">
                    <!-- List group links -->
                    <div class="list-group list-group-flush">
                        <a class="list-group-item list-group-item-action waves-effect">
                            Sales
                            <span class="badge badge-success badge-pill pull-right">
                                22%
                                <i class="fas fa-arrow-up ml-1"></i>
                            </span>
                        </a>
                        <a class="list-group-item list-group-item-action waves-effect">
                            Traffic
                            <span class="badge badge-danger badge-pill pull-right">
                                5%
                                <i class="fas fa-arrow-down ml-1"></i>
                            </span>
                        </a>
                        <a class="list-group-item list-group-item-action waves-effect">
                            Orders
                            <span class="badge badge-primary badge-pill pull-right">14</span>
                        </a>
                        <a class="list-group-item list-group-item-action waves-effect">
                            Issues
                            <span class="badge badge-primary badge-pill pull-right">123</span>
                        </a>
                        <a class="list-group-item list-group-item-action waves-effect">
                            Messages
                            <span class="badge badge-primary badge-pill pull-right">8</span>
                        </a>
                    </div>
                    <!-- List group links -->
                </div>
            </div>
            <!--/.Card-->
        </div>
        <!--Grid column-->
    </div>
    <!--Grid row-->
    <!--Grid row-->
    <div class="row wow fadeIn">
        <!--Grid column-->
        <div class="col-lg-6 col-md-9 mb-4">
            <!--Card-->
            <div class="card">
                <!-- Card header -->
                <div class="card-header text-center">
                    Spendings per month
                </div>
                <!--Card content-->
                <div class="card-body">
                    <canvas id="myChart"></canvas>
                </div>
            </div>
            <!--/.Card-->
        </div>

        <!--Grid column-->
        <!--Grid column-->
        <div class="col-lg-6 col-md-6 mb-4">
            <!--Card-->
            <div class="card">
                <!-- Card header -->
                <div class="card-header">Outgoing per category (Radar)</div>
                <!--Card content-->
                <div class="card-body">
                    <canvas id="radarChart"></canvas>
                </div>
            </div>
            <!--/.Card-->
        </div>
        <!--Grid column-->
    </div>
    <!--Grid row-->
</div>

@section scripts
{
    <!-- Charts -->
    <script>// Line
    var ctx = document.getElementById("myChart").getContext('2d');
    var myChart = new Chart(ctx, {
      type: 'bar',
      data: {
        labels: JSON.parse('@Html.Raw(Json.Encode(Model.FinancialBarChartModel.Labels))'),
        datasets: [{
          label: 'Amount per month per category',
          data: JSON.parse('@Html.Raw(Json.Encode(Model.FinancialBarChartModel.Amounts))'),
          backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(255, 206, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(255, 159, 64, 0.2)'
          ],
          borderColor: [
            'rgba(255,99,132,1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)'
          ],
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          yAxes: [{
            ticks: {
              beginAtZero: true
            }
          }]
        }
      }
    });
        
    //line
    var ctxL = document.getElementById("lineChart").getContext('2d');
    var myLineChart = new Chart(ctxL, {
      type: 'line',
      data: {
        labels: JSON.parse('@Html.Raw(Json.Encode(Model.FinancialLineChartModel.Labels))'),
        datasets: [{
            label: "Positive transaction",
            backgroundColor: [
              'rgba(105, 0, 132, .2)',
            ],
            borderColor: [
              'rgba(200, 99, 132, .7)',
            ],
            borderWidth: 2,
            data: JSON.parse('@Html.Raw(Json.Encode(Model.FinancialLineChartModel.PositivePayments))')
          },
          {
            label: "Negative transaction",
            backgroundColor: [
              'rgba(0, 137, 132, .2)',
            ],
            borderColor: [
              'rgba(0, 10, 130, .7)',
            ],
            data: JSON.parse('@Html.Raw(Json.Encode(Model.FinancialLineChartModel.NegativePayments))')
          }
        ]
      },
      options: {
        responsive: true
      }
    });
        

    //pie
    var ctxP = document.getElementById("pieChart").getContext('2d');
    var myPieChart = new Chart(ctxP, {
        type: 'pie',
        data: {
            labels: JSON.parse('@Html.Raw(Json.Encode(Model.FinancialOutgoingModel.Labels))'),
            datasets: [{
                data: JSON.parse('@Html.Raw(Json.Encode(Model.FinancialOutgoingModel.Amounts))'),
                backgroundColor: ["#F7464A", "#46BFBD", "#FDB45C", "#949FB1", "#4D5360"],
                hoverBackgroundColor: ["#FF5A5E", "#5AD3D1", "#FFC870", "#A8B3C5", "#616774"]
            }]
        },
        options: {
            responsive: true,
            legend: false
        }
    });

    //radar
    var ctxR = document.getElementById("radarChart").getContext('2d');
    var myRadarChart = new Chart(ctxR, {
      type: 'radar',
      data: {
        labels: JSON.parse('@Html.Raw(Json.Encode(Model.RadarChartModel.Labels))'),
        datasets: [{
          label: "Spendings by category",
          data: JSON.parse('@Html.Raw(Json.Encode(Model.RadarChartModel.Amounts))'),
          backgroundColor: [
            'rgba(105, 0, 132, .2)',
          ],
          borderColor: [
            'rgba(200, 99, 132, .7)',
          ],
          borderWidth: 2
        }]
      },
      options: {
        responsive: true
      }
    });

    //doughnut
    var ctxD = document.getElementById("doughnutChart").getContext('2d');
    var myLineChart = new Chart(ctxD, {
      type: 'doughnut',
      data: {
        labels: ["Red", "Green", "Yellow", "Grey", "Dark Grey"],
        datasets: [{
          data: [300, 50, 100, 40, 120],
          backgroundColor: ["#F7464A", "#46BFBD", "#FDB45C", "#949FB1", "#4D5360"],
          hoverBackgroundColor: ["#FF5A5E", "#5AD3D1", "#FFC870", "#A8B3C5", "#616774"]
        }]
      },
      options: {
        responsive: true
      }
    });</script>
    <!--Google Maps-->
    <script src="https://maps.google.com/maps/api/js"></script>
    <script>// Regular map
    function regular_map() {
      var var_location = new google.maps.LatLng(40.725118, -73.997699);

      var var_mapoptions = {
        center: var_location,
        zoom: 14
      };

      var var_map = new google.maps.Map(document.getElementById("map-container"),
        var_mapoptions);

      var var_marker = new google.maps.Marker({
        position: var_location,
        map: var_map,
        title: "New York"
      });
    }

    // Initialize maps
    google.maps.event.addDomListener(window, 'load', regular_map);

    new Chart(document.getElementById("horizontalBar"), {
      "type": "horizontalBar",
      "data": {
        "labels": ["Red", "Orange", "Yellow", "Green", "Blue", "Purple", "Grey"],
        "datasets": [{
          "label": "My First Dataset",
          "data": [22, 33, 55, 12, 86, 23, 14],
          "fill": false,
          "backgroundColor": ["rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)",
            "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)",
            "rgba(54, 162, 235, 0.2)",
            "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"
          ],
          "borderColor": ["rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)",
            "rgb(75, 192, 192)", "rgb(54, 162, 235)", "rgb(153, 102, 255)",
            "rgb(201, 203, 207)"
          ],
          "borderWidth": 1
        }]
      },
      "options": {
        "scales": {
          "xAxes": [{
            "ticks": {
              "beginAtZero": true
            }
          }]
        }
      }
    });</script>
}
